//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DMS.GLSL {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "15.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("DMS.GLSL.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to radians degrees 
        ///sin cos tan 
        ///asin acos atan
        ///sinh cosh tanh 
        ///asinh acosh atanh 
        ///pow exp log exp2 log2 
        ///sqrt inversesqrt
        ///abs sign floor trunc round roundEven ceil fract mod modf
        ///min max clamp mix step smoothstep
        ///isnan isinf
        ///floatBitsToInt floatBitsToUint 
        ///intBitsToFloat uintBitsToFloat
        ///fma frexp ldexp
        ///packUnorm2x16 packSnorm2x16 packUnorm4x8 packSnorm4x8 
        ///unpackUnorm2x16 unpackSnorm2x16 unpackUnorm4x8 unpackSnorm4x8 
        ///packDouble2x32
        ///unpackDouble2x32
        ///packHalf2x16
        ///unpackHalf2x16
        ///length distan [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string glslFunctions {
            get {
                return ResourceManager.GetString("glslFunctions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to attribute const
        ///uniform varying buffer shared
        ///coherent volatile restrict readonly writeonly
        ///atomic_uint
        ///layout
        ///centroid flat smooth noperspective
        ///patch sample
        ///break continue do for while switch case default 
        ///if else
        ///subroutine
        ///in out 
        ///inout
        ///float double int void 
        ///bool
        ///true false
        ///invariant precise
        ///discard return
        ///lowp mediump highp precision
        ///
        ///mat2 mat3 mat4 dmat2 dmat3 dmat4
        ///mat2x2 mat2x3 mat2x4 dmat2x2 dmat2x3 dmat2x4
        ///mat3x2 mat3x3 mat3x4 dmat3x2 dmat3x3 dmat3x4
        ///mat4x2 mat4x3 mat4x4 dma [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string glslKeywords {
            get {
                return ResourceManager.GetString("glslKeywords", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to gl_NumWorkGroups
        ///gl_WorkGroupSize
        ///gl_WorkGroupID
        ///gl_LocalInvocationID
        ///gl_GlobalInvocationID
        ///gl_LocalInvocationIndex
        ///
        ///gl_VertexID
        ///gl_InstanceID
        ///gl_PerVertex
        ///gl_Position
        ///gl_PointSize
        ///gl_ClipDistance
        ///gl_CullDistance
        ///gl_in
        ///
        ///gl_PrimitiveIDIn
        ///gl_InvocationID
        ///
        ///gl_PrimitiveID
        ///gl_Layer
        ///gl_ViewportIndex
        ///
        ///gl_PatchVerticesIn
        ///gl_PrimitiveID
        ///gl_InvocationID
        ///
        ///gl_TessLevelOuter
        ///gl_TessLevelInner
        ///
        ///gl_PatchVerticesIn
        ///gl_PrimitiveID
        ///gl_TessCoord
        ///
        ///gl_FragColor
        ///gl_FragCoord
        ///gl_FrontFacing
        ///gl [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string glslVariables {
            get {
                return ResourceManager.GetString("glslVariables", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Copyright 2016 DMS
        ///
        ///Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);
        ///you may not use this file except in compliance with the License.
        ///You may obtain a copy of the License at
        ///
        ///    http://www.apache.org/licenses/LICENSE-2.0
        ///
        ///Unless required by applicable law or agreed to in writing, software
        ///distributed under the License is distributed on an &quot;AS IS&quot; BASIS,
        ///WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
        ///See the License for the specific language governing perm [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string LICENSE {
            get {
                return ResourceManager.GetString("LICENSE", resourceCulture);
            }
        }
    }
}
