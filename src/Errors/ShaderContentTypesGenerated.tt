<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ include file="$(ProjectDir)Contracts\\ShaderTypesAndDefaultExtension.t4" #>
using Microsoft.VisualStudio.Utilities;
using System.ComponentModel.Composition;

namespace DMS.GLSL.Errors
{
	internal static class ShaderContentTypes
	{
		public const string GlslShader = "glslShader";

		public static string DefaultFileExtension(string shaderType)
		{
			switch(shaderType)
			{
<#
foreach(var shaderType in mappingShaderTypeToExtension)
{
	var name = ToCamelCase(shaderType.Key);
	var glslName = $"glsl{name}";
#>
				case <#=name#>: return "<#=shaderType.Value#>";
<#}#>
			}
			return ".frag";
		}

#pragma warning disable 649 //never used warning
		[Export]
		[Name(GlslShader)]
		[BaseDefinition("code")]
		internal static readonly ContentTypeDefinition glslContentType;

		<#foreach(var shaderType in mappingShaderTypeToExtension)
		{
			var name = ToCamelCase(shaderType.Key);
			var glslName = $"glsl{name}";#>

		public const string <#=name#> = "<#=glslName#>";
		[Export]
		[Name(<#=name#>)]
		[BaseDefinition(GlslShader)]
		internal static readonly ContentTypeDefinition <#=glslName#>;
<#}#>
#pragma warning restore 649 //never used warning
	}
}
