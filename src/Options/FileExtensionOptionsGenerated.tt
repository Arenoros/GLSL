<#@ template debug="false" hostspecific="false" language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ include file="..\Errors\ShaderTypesAndDefaultExtension.t4" #>
<#@ output extension=".cs" #>
namespace DMS.GLSL.Options
{
	using DMS.GLSL.Contracts;
	using DMS.GLSL.Errors;
	using Microsoft.VisualStudio.Utilities;
	using System.ComponentModel.Composition;

	internal sealed partial class FileExtensionsOption
	{
		[ImportingConstructor]
		public FileExtensionsOption([Import] IContentTypeRegistryService contentTypeRegistry, [Import] IFileExtensionRegistryService fileExtensionRegistry, [Import] ILogger logger)
		{
			var options = OptionsPagePackage.Options;
			void Register(string sExtensions, string contentType) => RegisterFileExtensions(fileExtensionRegistry, sExtensions, contentTypeRegistry.GetContentType(contentType), logger);
<#foreach(var shaderType in mappingShaderTypeToExtension)
{
	var name = ToCamelCase(shaderType.Key);#>
			Register(options.<#=name#>ShaderFileExtensions, ShaderContentTypes.<#=name#>);
<#}#>
		}
	}
}
